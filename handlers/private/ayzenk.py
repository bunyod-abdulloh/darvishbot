from aiogram import types
from aiogram.dispatcher import FSMContext

from magic_filter import F

from keyboards.default.user_buttons import tests_main_dkb
from keyboards.inline.user_ibuttons import ayzenktemp_ikb, start_test
from loader import db, dp
from services.error_service import notify_exception_to_admin
from utils.all_functions import warning_text
from utils.ayzenk import ayztemplastquestion, handle_response


@dp.message_handler(F.text == "Ayzenk | Temperament aniqlash", state="*")
async def temperament_router(message: types.Message, state: FSMContext):
    await state.finish()
    await db.delete_ayztemptemp(
        telegram_id=message.from_user.id
    )

    await message.answer(
        text="–ê–π–∑–µ–Ω–∫–Ω–∏–Ω–≥ <b>–®–∞—Ö—Å–∏—è—Ç —Å—û—Ä–æ–≤–Ω–æ–º–∞—Å–∏</b> 57 —Ç–∞ —Å–∞–≤–æ–ª–¥–∞–Ω –∏–±–æ—Ä–∞—Ç. –ñ–∞–≤–æ–±–ª–∞—Ä 3 —Ç–∞ –º–µ–∑–æ–Ω"
             "(–∏–Ω—Ç—Ä–æ–≤–µ—Ä—Å–∏—è/—ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Å–∏—è, –Ω–µ–π—Ä–æ—Ç–∏–∑–º –≤–∞ —ë–ª“ì–æ–Ω)–ª–∞—Ä –∞—Å–æ—Å–∏–¥–∞ —Ç–∞“≥–ª–∏–ª “õ–∏–ª–∏–Ω–∏–± –Ω–∞—Ç–∏–∂–∞ —á–∏“õ–∞—Ä–∏–ª–∞–¥–∏. –°—û—Ä–æ–≤–Ω–æ–º–∞ "
             "–°–∏–∑–¥–∞–≥–∏ –¥–æ–º–∏–Ω–∞–Ω—Ç —Ç–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç–Ω–∏ –∞–Ω–∏“õ–ª–∞—à–≥–∞ —ë—Ä–¥–∞–º –±–µ—Ä–∞–¥–∏. –°–∞–≤–æ–ª–ª–∞—Ä–Ω–∏–Ω–≥ 24 —Ç–∞—Å–∏ —à–∞—Ö—Å–Ω–∏–Ω–≥ –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç —ë–∫–∏ "
             "—ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç —ç–∫–∞–Ω–ª–∏–≥–∏–Ω–∏ –∞–Ω–∏“õ–ª–∞—à–≥–∞, 24 —Ç–∞—Å–∏ —à–∞—Ö—Å–Ω–∏–Ω–≥ “≥–∏—Å—Å–∏–π –±–∞—Ä“õ–∞—Ä–æ—Ä —ë–∫–∏ –±–∞—Ä“õ–∞—Ä–æ—Ä —ç–º–∞—Å–ª–∏–≥–∏–Ω–∏ "
             "–∞–Ω–∏“õ–ª–∞—à(–Ω–µ–π—Ä–æ—Ç–∏–∑–º)–≥–∞ –≤–∞ “õ–æ–ª–≥–∞–Ω 9 —Ç–∞—Å–∏ —Å—û—Ä–æ–≤–Ω–æ–º–∞ —Ç—û–ª–¥–∏—Ä—É–≤—á–∏ —à–∞—Ö—Å–Ω–∏–Ω–≥ —Å—û—Ä–æ–≤–Ω–æ–º–∞–≥–∞ –º—É–Ω–æ—Å–∞–±–∞—Ç–∏–Ω–∏ –∞–Ω–∏“õ–ª–∞—à–≥–∞ "
             "“õ–∞—Ä–∞—Ç–∏–ª–≥–∞–Ω."
             "\n\n–°–∏–∑ —Å–∞–≤–æ–ª–ª–∞—Ä–Ω–∏ —û“õ–∏–±, —É–ª–∞—Ä–≥–∞ –∂–∞–≤–æ–± –±–µ—Ä–∏—à–∏–Ω–≥–∏–∑ –ª–æ–∑–∏–º. –£–ª–∞—Ä–≥–∞ ‚Äú“≤–∞‚Äù —ë–∫–∏ ‚Äú–ô—û“õ‚Äù –¥–µ–± –∂–∞–≤–æ–± –±–µ—Ä–∏–Ω–≥, "
             "“≥–∞—ë–ª–∏–Ω–≥–∏–∑–≥–∞ –∫–µ–ª–≥–∞–Ω –±–∏—Ä–∏–Ω—á–∏ –∂–∞–≤–æ–±–Ω–∏ —ë–∑–∏–Ω–≥, —É–ª–∞—Ä —É—Å—Ç–∏–¥–∞ —É–∑–æ“õ —û–π–ª–∞–± —û—Ç–∏—Ä–º–∞–Ω–≥, —á—É–Ω–∫–∏ –∂–∞–≤–æ–±–Ω–∏ –∞–Ω–∏“õ–ª–∞—à–≥–∞ "
             "–¥–∞—Å—Ç–ª–∞–±–∫–∏ —Ä–µ–∞–∫—Ü–∏—è–Ω–≥–∏–∑ –º—É“≥–∏–º. –¢—û“ì—Ä–∏ –≤–∞ –Ω–æ—Ç—û“ì—Ä–∏ –∂–∞–≤–æ–±–Ω–∏–Ω–≥ —û–∑–∏ –π—û“õ, –±—É –µ—Ä–¥–∞ –±–æ—Ä-–π—û“ì–∏ —à–∞—Ö—Å–∏–Ω–≥–∏–∑ –∞–Ω–∏“õ–ª–∞–Ω–∞–¥–∏ "
             "—Ö–æ–ª–æ—Å."
             "\n\n–°—û—Ä–æ–≤–Ω–æ–º–∞ —è–∫—É–Ω–ª–∞–Ω–≥–∞—á, –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç —ë–∫–∏ —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç —ç–∫–∞–Ω–ª–∏–≥–∏–Ω–≥–∏–∑, –Ω–µ–π—Ä–æ—Ç–∏–∑–º –¥–∞—Ä–∞–∂–∞—Å–∏ –≤–∞ “õ–∞–π—Å–∏ —Ç–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç "
             "–¥–æ–º–∏–Ω–∞–Ω—Ç —ç–∫–∞–Ω–ª–∏–≥–∏ –∫—û—Ä—Å–∞—Ç–∏–ª–∞–¥–∏."
             "\n\n<b><i>–≠—Å–ª–∞—Ç–º–∞:\n\n–Å–ª“ì–æ–Ω –º–µ–∑–æ–Ω–∏ –±—û–π–∏—á–∞ –∫—û—Ä—Å–∞—Ç–∫–∏—á–∏–Ω–≥–∏–∑ 4 –±–∞–ª–ª–¥–∞–Ω –æ—à–∏–± –∫–µ—Ç—Å–∞ —ë–∫–∏ "
             "–Ω–∞—Ç–∏–∂–∞ —Å–∏—Ñ–∞—Ç–∏–¥–∞ –∏–∫–∫–∏—Ç–∞ —Ç–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç —á–∏“õ–∞—Ä–∏–ª—Å–∞ —Å—û—Ä–æ–≤–Ω–æ–º–∞–Ω–∏ “õ–∞–π—Ç–∞ –∏—à–ª–∞—à–∏–Ω–≥–∏–∑ –ª–æ–∑–∏–º!\n\n"
             "</i></b>",
        reply_markup=start_test(
            callback="ayztemp"
        )
    )


# Handler for starting the test
@dp.callback_query_handler(F.data == "ayztemp")
async def ayztemp_go(call: types.CallbackQuery):
    await db.delete_ayztemptemp(telegram_id=call.from_user.id)
    all_questions = await db.select_questions_ayztemp()

    await call.message.edit_text(
        text=f"{warning_text}\n\n{all_questions[0]['question_number']} / {len(all_questions)}\n\n"
             f"{all_questions[0]['question']}",
        reply_markup=ayzenktemp_ikb(testdb=all_questions[0])
    )


@dp.callback_query_handler(F.data.startswith("ayztemp:yes:"))
@dp.callback_query_handler(F.data.startswith("ayztemp:no:"))
async def ayztemp_answer(call: types.CallbackQuery):
    try:
        question_id = int(call.data.split(":")[2])
        await call.answer(cache_time=0)
        # Determine the response type and process it
        if "yes" in call.data:
            await handle_response("yes", question_id, call)
        elif "no" in call.data:
            await handle_response("no", question_id, call)

        # Move to the next question or finish the test
        await ayztemplastquestion(question_id, call)

    except Exception as err:
        await notify_exception_to_admin(err=err)


@dp.callback_query_handler(F.data.startswith("ayztempback"))
async def ayzback_callback(call: types.CallbackQuery):
    question_id = int(call.data.split(":")[1])

    if question_id == 0:
        await call.message.delete()
        await call.message.answer(text="üßë‚Äçüíª Testlar | So'rovnomalar", reply_markup=tests_main_dkb)
    else:
        await db.back_user_ayztemptemp(telegram_id=call.from_user.id, question_number=question_id)
        all_questions = await db.select_questions_ayztemp()

        await call.message.edit_text(
            text=f"{all_questions[question_id - 1]['question_number']} / {len(all_questions)}\n\n{all_questions[question_id - 1]['question']}",
            reply_markup=ayzenktemp_ikb(testdb=all_questions[question_id - 1])
        )
